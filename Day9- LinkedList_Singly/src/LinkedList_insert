public class Insert {
    public static void main(String[] args) {
        LinkedList link=new LinkedList();
        link.insert(100);
        link.insert(200);
        link.insert(300);
        link.insertAtBegin(500);
        link.insertMiddle(400,2);
        link.display();


    }
}
class Node{
    int data;
    Node next;
    Node(int data)
    {
        this.data=data;
        this.next=null;
    }
}

class LinkedList
{
    Node head, tail;
    void insert(int data){
        Node newnode=new Node(data);
        //newnode.next=head;
        if(head==null){
            head=newnode;
            tail=newnode;
        }
        else{
            tail.next=newnode;
            tail=newnode;
        }
    }
    void insertAtBegin(int data){
        Node newnode=new Node(data);
        newnode.next=head;
        head=newnode;
    }
    void insertMiddle(int data, int pos) {
        Node newnode = new Node(data);
        if (pos == 0) {  // Insert at head case
            newnode.next = head;
            head = newnode;
            return;
        }

        Node temp = head;
        int count = 0;

        // Traverse to the node before the insertion point
        while (temp != null && count < pos - 1) {
            temp = temp.next;
            count++;
        }

        if (temp == null) {
            System.out.println("Position out of bounds.");
            return;
        }

        // Insert new node in the middle
        newnode.next = temp.next;
        temp.next = newnode;
    }

    void display(){
        Node temp=head;
        while(temp!=null){
            System.out.println(temp.data);
            temp=temp.next;
        }
    }


}
